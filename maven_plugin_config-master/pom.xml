<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2015 BSI Business Systems Integration AG.
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
  http://www.eclipse.org/legal/epl-v10.html

  Contributors:
  BSI Business Systems Integration AG - initial API and implementation
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.eclipse.scout</groupId>
    <artifactId>maven_plugin_version-master</artifactId>
    <version>1.6-SNAPSHOT</version>
    <relativePath>../maven_plugin_version-master</relativePath>
  </parent>

  <artifactId>maven_plugin_config-master</artifactId>
  <packaging>pom</packaging>

  <prerequisites>
    <!-- Note that "prerequisites" not inherited, but used by versions-maven-plugin -->
    <maven>${maven.min.version}</maven>
  </prerequisites>

  <properties>
    <jdk.min.version>1.7</jdk.min.version>
    <jdk.source.version>1.7</jdk.source.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.build.timestamp.format>yyyyMMdd-HHmmss</maven.build.timestamp.format>
    <maven.min.version>3.2.1</maven.min.version>
    <maven.api.version>3.2.1</maven.api.version>

    <deployAtEnd>true</deployAtEnd>
    <master_sanity-checks_skip>false</master_sanity-checks_skip>

    <!-- Test Control -->
    <master_unit-test_skip>false</master_unit-test_skip>
    <master_web-test_skip>false</master_web-test_skip>
    <master_coverage_skip>false</master_coverage_skip>

    <!-- Release Control -->
    <master_release_push-changes>false</master_release_push-changes>
    <master_release_tag-name>${project.version}</master_release_tag-name>

    <!-- Git Information Control -->
    <master_git-id.skip>false</master_git-id.skip>
    <master_git-id.fail-no-git>false</master_git-id.fail-no-git>
    <master_git-id.use-native>false</master_git-id.use-native>

    <!-- Surefire Fork Control -->
    <master_test_fork-count>1.0C</master_test_fork-count>
    <master_test_reuse-vm>true</master_test_reuse-vm>
    <master_test_timeout>30</master_test_timeout>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <configuration>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <compilerId>jdt</compilerId>
            <source>${jdk.source.version}</source>
            <target>${jdk.source.version}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
            <showWarnings>true</showWarnings>
            <compilerArgs>
              <arg>-proc:none</arg>
            </compilerArgs>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.eclipse.tycho</groupId>
              <artifactId>tycho-compiler-jdt</artifactId>
              <version>${master_dependency_tycho-compiler_version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <testFailureIgnore>true</testFailureIgnore>
            <skipTests>${master_unit-test_skip}</skipTests>
            <argLine>${argLine} -Dfile.encoding=${project.build.sourceEncoding}</argLine>
            <systemPropertyVariables>
              <sun.jnu.encoding>${project.build.sourceEncoding}</sun.jnu.encoding>
              <user.timezone>UTC</user.timezone>
              <java.awt.headless>true</java.awt.headless>
              <java.util.logging.SimpleFormatter.format>%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS %4$s %5$s%6$s%n</java.util.logging.SimpleFormatter.format>
            </systemPropertyVariables>
            <runOrder>failedfirst</runOrder>
            <reuseForks>${master_test_reuse-vm}</reuseForks>
            <forkCount>${master_test_fork-count}</forkCount>
            <forkedProcessTimeoutInSeconds>${master_test_timeout}</forkedProcessTimeoutInSeconds>
            <useManifestOnlyJar>false</useManifestOnlyJar>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <configuration>
            <deployAtEnd>${deployAtEnd}</deployAtEnd>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <tagNameFormat>${master_release_tag-name}</tagNameFormat>
            <addSchema>true</addSchema>
            <detail>true</detail>
            <indentSize>2</indentSize>
            <localCheckout>true</localCheckout>
            <pushChanges>${master_release_push-changes}</pushChanges>
            <arguments>${arguments} --batch-mode -Drelease-build</arguments>
            <useReleaseProfile>false</useReleaseProfile>
            <goals>install</goals>
          </configuration>
        </plugin>

        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <configuration>
            <dateFormat>yyyy-MM-dd'T'HH:mm:ssZZ</dateFormat>
            <!-- <verbose>true</verbose> -->
            <generateGitPropertiesFile>false</generateGitPropertiesFile>
            <skipPoms>true</skipPoms>
            <failOnNoGitDirectory>${master_git-id.fail-no-git}</failOnNoGitDirectory>
            <skip>${master_git-id.skip}</skip>
            <useNativeGit>${master_git-id.use-native}</useNativeGit>
            <abbrevLength>10</abbrevLength>
            <gitDescribe>
              <always>true</always>
              <abbrev>7</abbrev>
              <dirty>-dirty</dirty>
              <forceLongFormat>false</forceLongFormat>
              <tags>true</tags>
            </gitDescribe>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <configuration>
            <!-- do not build an empty jar if the project is e.g. a pom project -->
            <skipIfEmpty>true</skipIfEmpty>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addClasspath>false</addClasspath>
              </manifest>
              <manifestSections combine.children="append">
                <manifestSection>
                  <name>${project.groupId}:${project.artifactId}</name>
                  <manifestEntries>
                    <!-- This is actually the time when the build was done -->
                    <Build-Time>${git.build.time}</Build-Time>
                    <!-- Git specific properties -->
                    <Git-Branch>${git.branch}</Git-Branch>
                    <Git-Commit-Id>${git.commit.id}</Git-Commit-Id>
                    <Git-Commit-Id-Describe>${git.commit.id.describe}</Git-Commit-Id-Describe>
                    <Git-Remote-Origin-Url>${git.remote.origin.url}</Git-Remote-Origin-Url>
                    <!-- project information -->
                    <Project-ArtifactId>${project.artifactId}</Project-ArtifactId>
                    <Project-GroupId>${project.groupId}</Project-GroupId>
                    <Project-Name>${project.name}</Project-Name>
                    <Project-Version>${project.version}</Project-Version>
                  </manifestEntries>
                </manifestSection>
              </manifestSections>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.basepom.maven</groupId>
          <artifactId>duplicate-finder-maven-plugin</artifactId>
          <configuration>
            <skip>${master_sanity-checks_skip}</skip>
            <printEqualFiles>false</printEqualFiles>
            <failBuildInCaseOfConflict>true</failBuildInCaseOfConflict>
            <failBuildInCaseOfDifferentContentConflict>true</failBuildInCaseOfDifferentContentConflict>
            <failBuildInCaseOfEqualContentConflict>true</failBuildInCaseOfEqualContentConflict>
            <checkCompileClasspath>true</checkCompileClasspath>
            <checkRuntimeClasspath>true</checkRuntimeClasspath>
            <checkTestClasspath>true</checkTestClasspath>
            <quiet>false</quiet>
            <preferLocal>true</preferLocal>
            <useResultFile>false</useResultFile>
            <includePomProjects>true</includePomProjects>
            <ignoredResourcePatterns>
              <ignoredResourcePattern>.*ico$</ignoredResourcePattern>
              <ignoredResourcePattern>.*html$</ignoredResourcePattern>
              <ignoredResourcePattern>.*xml$</ignoredResourcePattern>
              <ignoredResourcePattern>.*properties$</ignoredResourcePattern>
            </ignoredResourcePatterns>
            <ignoredDependencies>
              <!-- <dependency> -->
              <!-- <groupId>org.hamcrest</groupId> -->
              <!-- <artifactId>hamcrest-core</artifactId> -->
              <!-- </dependency> -->
              <!-- <dependency> -->
              <!-- <groupId>org.apache.xmlgraphics</groupId> -->
              <!-- <artifactId>batik-js</artifactId> -->
              <!-- </dependency> -->
              <!-- <dependency> -->
              <!-- <groupId>org.mozilla</groupId> -->
              <!-- <artifactId>rhino</artifactId> -->
              <!-- </dependency> -->
            </ignoredDependencies>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <configuration>
            <skip>${master_coverage_skip}</skip>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>animal-sniffer-maven-plugin</artifactId>
          <configuration>
            <signature>
              <groupId>org.codehaus.mojo.signature</groupId>
              <artifactId>java17</artifactId>
              <version>1.0</version>
            </signature>
            <!-- for java18 signature check. @see https://github.com/ianbrandt/animal-sniffer-signatures -->
            <!-- <signature> -->
            <!-- <groupId>org.kaazing.mojo.signature</groupId> -->
            <!-- <artifactId>java18</artifactId> -->
            <!-- <version>1.0</version> -->
            <!-- </signature> -->
            <skip>${master_sanity-checks_skip}</skip>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <configuration>
            <header>${project.basedir}/license_files/copyright.txt</header>
            <headerDefinitions>
              <headerDefinition>${project.basedir}/license_files/scoutLicenceHeaderJava.xml</headerDefinition>
            </headerDefinitions>
            <failIfMissing>true</failIfMissing>
            <strictCheck>true</strictCheck>
            <aggregate>true</aggregate>
            <useDefaultExcludes>false</useDefaultExcludes>
            <includes>
              <include>**/*scout*/src/main/java/**</include>
              <include>**/*scout*/src/main/js/**</include>
              <include>**/*scout*/src/main/less/**</include>
              <include>**/*scout*/src/test/java/**</include>
              <include>**/*scout*/src/test/js/**</include>
              <include>**/pom.xml</include>
              <include>**/*.properties</include>
              <include>**/*.java</include>
              <include>**/*.js</include>
              <include>**/*.css</include>
              <include>**/*.xml</include>
              <include>**/*.xsd</include>
            </includes>
            <excludes>
              <exclude>**/target/**</exclude>
              <exclude>**/.*</exclude>
              <exclude>**/.settings/**</exclude>
              <exclude>**/release.properties</exclude>
              <exclude>**/pom.xml.releaseBackup</exclude>
              <exclude>**/*.sh</exclude>
              <exclude>tests/**</exclude>
            </excludes>
            <mapping>
              <java>SCOUT_JAVADOC_STYLE</java>
              <js>SCOUT_JAVADOC_STYLE</js>
              <less>SCOUT_JAVADOC_STYLE</less>
              <css>SCOUT_JAVADOC_STYLE</css>
            </mapping>
            <skip>${master_sanity-checks_skip}</skip>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.mycila</groupId>
              <artifactId>license-maven-plugin-git</artifactId>
              <!-- make sure you use the same version as license-maven-plugin -->
              <version>${master_plugin_license_version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <configuration>
            <rules>
              <requirePluginVersions>
                <message>Build reproducibility : always define plugin versions</message>
                <banLatest>true</banLatest>
                <banRelease>true</banRelease>
                <phases>clean,deploy</phases>
                <unCheckedPluginList>org.apache.maven.plugins:maven-deploy-plugin</unCheckedPluginList>
              </requirePluginVersions>
              <requireReleaseDeps>
                <message>No SNAPSHOT versions allowed for dependencies</message>
                <onlyWhenRelease>true</onlyWhenRelease>
              </requireReleaseDeps>
              <requireJavaVersion>
                <message>To build this project JDK ${jdk.min.version} (or upper) is required. Please install it.</message>
                <version>${jdk.min.version}</version>
              </requireJavaVersion>
              <requireMavenVersion>
                <message>To build this project Maven ${maven.min.version} (or upper) is required. Please install it.</message>
                <version>${maven.min.version}</version>
              </requireMavenVersion>
              <bannedDependencies>
                <message>commons-beanutils:commons-beanutils should be used instead</message>
                <excludes>
                  <exclude>commons-beanutils:commons-beanutils-core</exclude>
                </excludes>
                <searchTransitive>true</searchTransitive>
              </bannedDependencies>
              <banDuplicatePomDependencyVersions></banDuplicatePomDependencyVersions>
              <!-- can't be used until html ui in eclipse repo and of the tools-build
                <reactorModuleConvergence /> -->
              <requireSameVersions>
                <dependencies>
                  <dependency>org.eclipse.scout</dependency>
                  <dependency>org.eclipse.scout.rt</dependency>
                  <dependency>org.eclipse.scout.sdk</dependency>
                </dependencies>
              </requireSameVersions>
              <requireSameVersions>
                <dependencies>
                  <dependency>org.eclipse.jetty</dependency>
                </dependencies>
              </requireSameVersions>
            </rules>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <executions>
          <execution>
            <id>default</id>
            <goals>
              <goal>revision</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <!-- Always build a jar with the test classes -->
          <execution>
            <id>attach-tests</id>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.basepom.maven</groupId>
        <artifactId>duplicate-finder-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-java-api-compatibility</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-rules</id>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependency-updates-report</report>
              <report>plugin-updates-report</report>
              <report>property-updates-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <!-- disable all tests -->
      <id>skipTests</id>
      <activation>
        <property>
          <name>skipTests</name>
        </property>
      </activation>
      <properties>
        <master_unit-test_skip>true</master_unit-test_skip>
        <master_web-test_skip>true</master_web-test_skip>
        <master_coverage_skip>true</master_coverage_skip>
      </properties>
    </profile>

    <profile>
      <!-- skip checks for faster development-build -->
      <id>dev</id>
      <properties>
        <master_sanity-checks_skip>true</master_sanity-checks_skip>
        <enforcer.skip>true</enforcer.skip>
        <master_coverage_skip>true</master_coverage_skip>
      </properties>
    </profile>

    <profile>
      <!-- remote debug tests -->
      <id>debug</id>
      <activation>
        <property>
          <name>debugTests</name>
        </property>
      </activation>
      <properties>
        <debugArgLine>-Xdebug -Xrunjdwp:transport=dt_socket,address=${remote.debug.port},server=y,suspend=y</debugArgLine>
      </properties>
    </profile>

    <profile>
      <!-- check copyright/license headers -->
      <id>license_check</id>
      <activation>
        <property>
          <name>license_check</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <inherited>false</inherited>
            <executions>
              <execution>
                <id>enforce-license-headers</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>validate</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- sign jars -->
      <id>sign</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.eclipse.cbi.maven.plugins</groupId>
            <artifactId>eclipse-jarsigner-plugin</artifactId>
            <executions>
              <execution>
                <id>sign</id>
                <goals>
                  <goal>sign</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- make a release build. includes sources/javadoc... -->
      <id>scout-release</id>
      <activation>
        <property>
          <name>release-build</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
              <execution>
                <id>attach-test-sources</id>
                <goals>
                  <goal>test-jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <failOnError>false</failOnError>
                  <source>${jdk.source.version}</source>
                  <target>${jdk.source.version}</target>
                  <encoding>${project.build.sourceEncoding}</encoding>
                  <quiet>true</quiet>
                  <additionalparam>-quiet</additionalparam>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>test-jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <goals>
                  <goal>sign</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
